---
 - name: Set up environment for the ML pipeline
   hosts: localhost
   become: yes

   tasks:
   - name: Update apt
     apt: update_cache=yes
     
   - name: Install python-pip
     apt:
       name: python3-pip
       
   - name: Install pip requirements (openstacksdk, pymysql)
     pip:
       name:
         - openstacksdk
         - pymysql
       executable: pip3
     become_user: root
     become: yes 

   - name: Install virtualenv via pip
     pip:
       name: virtualenv
       executable: pip3
     become: yes
     become_user: root
   
   - name: Install mlflow
     pip:
       name: mlflow

   - name: Install sqlite3
     apt: name=sqlite 

 - name: Install Docker
   hosts: localhost
   become: yes
   vars:
     DOCKER_PACKAGES:
       - apt-transport-https
       - ca-certificates
       - curl
       - gnupg-agent
       - software-properties-common
     USER: "ubuntu"

   tasks:
   - name: Update apt packages
     apt:
       update_cache: "yes"
       force_apt_get: "yes"

   - name: Install packages needed for Docker
     apt:
       name: "{{ DOCKER_PACKAGES }}"
       state: present
       force_apt_get: "yes"

   - name: Add Docker GPG apt Key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present

   - name: Save the current Ubuntu release version into a variable
     shell: lsb_release -cs
     register: ubuntu_version

   - name: Add Docker Repository
     apt_repository:
       repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
       state: present

   - name: Update apt packages
     apt:
       update_cache: "yes"
       force_apt_get: "yes"

   - name: Install Docker
     apt:
       name: "docker-ce"
       state: present
       force_apt_get: "yes"

   - name: Test Docker with hello world example
     shell: "docker run hello-world"
     register: hello_world_output

   - name: Show output of hello word example
     debug:
       msg: "Container Output: {{hello_world_output.stdout}}"

   - name: Create docker group
     group:
       name: "docker"
       state: present

   - name: Adding user {{ USER }} to docker group  
     user:
       name: "{{ USER }}"
       groups: "docker"
       append: "yes"

   - name: Reboot server in order for changes to take place
     shell: "sleep 1 && reboot"
     async: 1
     poll: 0

   - name: Download Miniconda
     get_url:
       url: https://repo.continuum.io/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh
       dest: /tmp/install-miniconda.sh
       checksum: md5:a946ea1d0c4a642ddf0c3a26a18bb16d
       mode: 0550
   - name: Create conda folder
     become: True
     file:
       path: /opt/miniconda3
       state: directory
       owner: ubuntu
       mode: 755
       recurse: yes
   - name: Run the installer
     shell: /tmp/install-miniconda.sh -b -u -p /opt/miniconda3
   - name: Remove the installer
     file:
       state: absent
       path: /tmp/install-miniconda.sh
   - name: Add miniconda bin to path
     become: True
     shell: echo 'export PATH=/opt/miniconda3/bin:$PATH' >> /etc/profile
   - name: conda - read permission for all
     become: True
     file:
       path: /opt/miniconda3
       mode: +r
       recurse: yes
   - name: conda - execution permission for all
     become: True
     file:
       path: /opt/miniconda3/bin
       mode: +x
       recurse: yes

