---
 - name: Mount and prepare tracking server on volume
   hosts: mlflow_env
   become: yes

   tasks:
   - name: ap√•t
     apt: update_cache=yes

   - name: Install MySQL
     apt:
       name: mysql-server

   - name: Mount the created volume to the virtual machine
     debug: msg="yeau we mountin volume"

   - name: Prepare file system on the volume
     debug: msg="we preppin file system"

   - name: Edit MySQL storage pointer to save on volume
     debug: msg="changin save point"

   - name: Create a MySQL database meeting tracking server requirements
     debug: msg="create db, u need to find out mlflow requirements for db"

 - name: Set up environment for the ML pipeline
   hosts: mlflow_env
   become: yes
   tasks:

   - name: Update apt
     apt:
       update_cache: yes

   - name: Install python3-pip
     apt:
       name: python3-pip

   - name: Install virtualenv via pip
     pip:
       name: virtualenv
       executable: pip3
     become: yes
     become_user: root
   
   - name: Install mlflow
     pip:
       name: mlflow

   - name: Configure mlflow to use the MySQL db and volume storage as tracking server
     debug: msg="run the mlflow server ... command here!"

 - name: Install Docker
   hosts: mlflow_env
   become: yes
   vars:
     CTOP_VERSION: "0.7.3"
     DOCKER_COMPOSE_VERSION: "1.25.1"
     DOCKER_PACKAGES:
       - apt-transport-https
       - ca-certificates
       - curl
       - gnupg-agent
       - software-properties-common
     USER: "ubuntu"

   tasks:
   - name: Update apt packages
     apt:
       update_cache: "yes"
       force_apt_get: "yes"

   - name: Install packages needed for Docker
     apt:
       name: "{{ DOCKER_PACKAGES }}"
       state: present
       force_apt_get: "yes"

   - name: Add Docker GPG apt Key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present

   - name: Save the current Ubuntu release version into a variable
     shell: lsb_release -cs
     register: ubuntu_version

   - name: Add Docker Repository
     apt_repository:
       repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
       state: present

   - name: Update apt packages
     apt:
       update_cache: "yes"
       force_apt_get: "yes"

   - name: Install Docker
     apt:
       name: "docker-ce"
       state: present
       force_apt_get: "yes"

   - name: Test Docker with hello world example
     shell: "docker run hello-world"
     register: hello_world_output

   - name: Show output of hello word example
     debug:
       msg: "Container Output: {{hello_world_output.stdout}}"

   - name: Create docker group
     group:
       name: "docker"
       state: present

   - name: Adding user {{ USER }} to docker group  
     user:
       name: "{{ USER }}"
       groups: "docker"
       append: "yes"

   - name: Reboot server in order for changes to take place
     shell: "sleep 1 && reboot"
     async: 1
     poll: 0


